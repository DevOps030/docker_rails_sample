version: 2
jobs:
  build:
    machine:
      image: circleci/classic:edge
    environment:
      APP_NAME: docker-rails-sample
    steps:
      - checkout
      - run:
          name: setup_heroku
          command: bash .circleci/setup_heroku.sh
      - run:
          name: maintenance_on
          command: heroku maintenance:on --app ${APP_NAME}
      - run:
          name: db_migrate
          command: heroku run rails db:migrate --app ${APP_NAME}
      - run:
          name: maintenance_off
          command: heroku maintenance:off --app ${APP_NAME}
      - run:
          name: docker-compose build
          command: docker-compose build
      - run:
          name: docker-compose up
          command: docker-compose up -d
      - run:
          name: sleep for waiting launch db
          command: sleep 1
      - run:
          name: "before_test: setup db"
          command: docker-compose run web rails db:create db:migrate
      - run:
          name: test
          command: docker-compose run web rails test
      - run:
          name: docker-compose down
          command: docker-compose down
      # see: https://devcenter.heroku.com/articles/container-registry-and-runtime#using-a-ci-cd-platform
      - run:
          name: "deploy: build docker image"
          command: docker build --rm=false -t registry.heroku.com/${APP_NAME}/web .
      - run:
          # HEROKU_AUTH_TOKEN is generated by `heroku auth:token`
          name: "deploy: push container to registry.heroku.com"
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker login --username=_ --password=$HEROKU_AUTH_TOKEN registry.heroku.com
              docker push registry.heroku.com/${APP_NAME}/web
            fi
